import{_ as s,o as i,c as a,a2 as n}from"./chunks/framework.D57hjDWj.js";const g=JSON.parse('{"title":"对象篇","description":"","frontmatter":{},"headers":[],"relativePath":"function/object.md","filePath":"function/object.md"}'),t={name:"function/object.md"},e=n(`<h1 id="对象篇" tabindex="-1">对象篇 <a class="header-anchor" href="#对象篇" aria-label="Permalink to &quot;对象篇&quot;">​</a></h1><h2 id="合并对象交集属性" tabindex="-1">合并对象交集属性 <a class="header-anchor" href="#合并对象交集属性" aria-label="Permalink to &quot;合并对象交集属性&quot;">​</a></h2><p>合并源对象与目标对象的交集属性，并返回源对象</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> { mergeIntersect } </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">from</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;lib-agile&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> target</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  a: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  b: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mergeIntersect</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(source, target) </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// =&gt; {a: 2}</span></span></code></pre></div>`,4),l=[e];function h(p,k,r,c,d,o){return i(),a("div",null,l)}const y=s(t,[["render",h]]);export{g as __pageData,y as default};
